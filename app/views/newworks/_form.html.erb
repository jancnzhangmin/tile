<script>
    var way='';
    var current_newworkdetailid;
    var sharearr = new Array();
    var newworkshapearr = new Array();
    $(document).ready(function(){
        $(".i-checks").iCheck({checkboxClass:"icheckbox_square-green",radioClass:"iradio_square-green"});
        getdata();
        $('#userselect').change(function(){
            //$('#user').val(this.text());
            $('#user').val($('#userselect').find("option:selected").text());
        });



        var zr = zrender.init(document.getElementById('mycanvas'));


        zr.borderColor='#f0f0f0';
        initz();

        function Shape(){
            this.name ='';
            this.x1 = 0.0;
            this.x2 = 0.0;
            this.y1 = 0.0;
            this.y2 = 0.0;
            this.cpx = 0.0;
            this.cpy = 0.0;
            this.width = 0.0;
            this.height = 0.0;
            this.x = 0.0;
            this.y = 0.0;
            this.cx = 0.0;
            this.cy = 0.0;
            this.rx = 0.0;
            this.ry = 0.0;
            this.cpx1 = 0.0;
            this.cpy1 = 0.0;
            this.text = '';
            this.cwidth = 0.0;
            this.cheight = 0.0;
            this.newworkdetailid = 0;
        }



        var linex = new zrender.Line({
            shape:{
                x1:0,
                y1:0,
                x2:$('#mycanvas').attr('width'),
                y2:0
            },
            style:{
                file:'none',
                stroke:'#f0f0f0'
            }

        });
        zr.add(linex);
        var liney = new zrender.Line({
            shape:{
                x1:0,
                y1:0,
                x2:0,
                y2:$('#mycanvas').attr('height')
            },
            style:{
                file:'none',
                stroke:'#f0f0f0'
            }

        });
        zr.add(liney);

        var lineleft;
        var linetop;
        var lineright;
        var linebottom;

        function resizez(){
            lineleft.setShape({
                        x1:0,
                        y1:0,
                        x2:0,
                        y2:$('#mycanvas').attr('height')
                    }

            );
            linetop.setShape({
                        x1:0,
                        y1:0,
                        x2:$('#mycanvas').attr('width'),
                        y2:0
                    }

            );
            lineright.setShape({
                        x1:$('#mycanvas').attr('width'),
                        y1:0,
                        x2:$('#mycanvas').attr('width'),
                        y2:$('#mycanvas').attr('height')
                    }

            );
            linebottom.setShape({
                        x1:0,
                        y1:$('#mycanvas').attr('height'),
                        x2:$('#mycanvas').attr('width'),
                        y2:$('#mycanvas').attr('height')
                    }

            );
        }



        function initz(){
            lineleft = new zrender.Line({
                shape:{
                    x1:0,
                    y1:0,
                    x2:0,
                    y2:$('#mycanvas').attr('height')
                },
                style:{
                    file:'none',
                    stroke:'#a0a0a0'
                }

            });
            zr.add(lineleft);

            linetop = new zrender.Line({
                shape:{
                    x1:0,
                    y1:0,
                    x2:$('#mycanvas').attr('width'),
                    y2:0
                },
                style:{
                    file:'none',
                    stroke:'#a0a0a0'
                }

            });
            zr.add(linetop);

            lineright = new zrender.Line({
                shape:{
                    x1:$('#mycanvas').attr('width'),
                    y1:0,
                    x2:$('#mycanvas').attr('width'),
                    y2:$('#mycanvas').attr('height')
                },
                style:{
                    file:'none',
                    stroke:'#a0a0a0'
                }

            });
            zr.add(lineright);

            linebottom = new zrender.Line({
                shape:{
                    x1:0,
                    y1:$('#mycanvas').attr('height'),
                    x2:$('#mycanvas').attr('width'),
                    y2:$('#mycanvas').attr('height')
                },
                style:{
                    file:'none',
                    stroke:'#a0a0a0'
                }

            });
            zr.add(linebottom);



        }

        $('#whbtn').click(function(){
            $('#mycanvas').attr('width',$('#wvalue').val());
            $('#mycanvas').attr('height',$('#hvalue').val());
            resizez();
        });



        var curX =0;
        var curY =0;
        var isMouseDown =false;
        var line;
        var sharetype;
        var square;
        var squarefill;
        var circle;
        var circlefill;
        var vector;
        var font;
        var vectorstatus = false;
        var group = new zrender.Group();
        zr.add(group);

        zr.on('mousedown',function(e){
            curX = e.offsetX;
            curY = e.offsetY;
            isMouseDown = true;
            if(vectorstatus){
                vectorstatus=false;
                {
                    share = new Shape();
                    share.name ='vector';
                    share.x1 = group.children()[group.children().length -1].shape.x1;
                    share.y1 = group.children()[group.children().length -1].shape.y1;
                    share.x2 = group.children()[group.children().length -1].shape.x2;
                    share.y2 = group.children()[group.children().length -1].shape.y2;
                    share.cpx1 = group.children()[group.children().length -1].shape.cpx1;
                    share.cpy1 = group.children()[group.children().length -1].shape.cpy1;
                    sharearr.push(share);
                }
                return false;
            }

            if(sharetype == 'line'){
                line = new zrender.Line({
                    shape:{
                        x1:curX,
                        y1:curY,
                        x2:curX,
                        y2:curY
                    },
                    style:{
                        fill:'none',
                        stroke:'#333'
                    }
                });
                group.add(line);
            }else if(sharetype == 'square'){
                square = new zrender.Rect({
                    shape:{
                        x:curX,
                        y:curY,
                        width:0,
                        height:0
                    },style:{
                        fill:'none',
                        stroke:'#333'
                    }
                });
                group.add(square);
            }
            else if(sharetype == 'squarefill'){
                squarefill = new zrender.Rect({
                    shape:{
                        x:curX,
                        y:curY,
                        width:0,
                        height:0
                    },style:{
                        fill:'#333',
                        stroke:'#333'
                    }
                });
                group.add(squarefill);
            }
            else if(sharetype == 'circle'){
                circle = new zrender.Ellipse({
                    shape:{
                        cx:curX,
                        cy:curY,
                        rx:0,
                        ry:0
                    },style:{
                        fill:'none',
                        stroke:'#333'
                    }
                });
                group.add(circle);
            }
            else if(sharetype == 'circlefill'){
                circlefill = new zrender.Ellipse({
                    shape:{
                        cx:curX,
                        cy:curY,
                        rx:0,
                        ry:0
                    },style:{
                        fill:'#333',
                        stroke:'#333'
                    }
                });
                group.add(circlefill);
            }
            else if(sharetype == 'vector'){
                vectorstatus = true;
                vector = new zrender.BezierCurve({
                    shape:{
                        x1:curX,
                        y1:curY,
                        x2:curX,
                        y2:curY,
                        cpx1:curX,
                        cpy1:curY
                    },style:{
                        fill:'none',
                        stroke:'#333'
                    }
                });
                group.add(vector);
            }
            else if(sharetype == 'font'){
                if($('#canvastext')[0].style.display == ''){
                    return false;
                }
                font = new zrender.Text({
                    style:{
                        text:'',
                        textFill:'#333',
                        textStroke:'#333'
                    }
                });
                font.attr('position', [curX, curY]);
                group.add(font);
                $('#canvastext').css({"margin-left": curX - 300});
                $('#canvastext').css({"margin-top": curY});
                $('#canvastext').val('');
                $('#canvastext').show();
            }
            else if(sharetype == 'move'){


            }

        });

        $('#canvastext').blur(function(){

            font.setStyle({

                text: $('#canvastext').val(),
                textFill: '#333',
                textStroke: '#333'

            });


            share = new Shape();
            share.name ='font';
            share.text = group.children()[group.children().length -1].style.text;
            share.x = group.children()[group.children().length -1].position[0];
            share.y = group.children()[group.children().length -1].position[1];
            sharearr.push(share);

            $(this).hide();


        });
        $('#canvastext').on('mouseup',function(){
            $(this).focus();
        });




        zr.on('mousemove', function (e) {

            $('#coortext').text(e.offsetX+','+ e.offsetY);

            linex.setShape({
                        y1: e.offsetY,
                        y2: e.offsetY
                    }

            );
            liney.setShape({
                        x1: e.offsetX,
                        x2: e.offsetX
                    }

            );

            if(isMouseDown){
                if(sharetype == 'line') {
                    line.setShape({
                        x2: e.offsetX,
                        y2: e.offsetY
                    });
                }else if(sharetype == 'square'){
                    square.setShape({
                        width:e.offsetX-curX,
                        height:e.offsetY-curY
                    });
                }else if(sharetype == 'squarefill'){
                    squarefill.setShape({
                        width:e.offsetX-curX,
                        height:e.offsetY-curY
                    });
                }else if(sharetype == 'circle'){
                    circle.setShape({
                        cx: e.offsetX -(e.offsetX-curX)/2,
                        cy: e.offsetY-(e.offsetY-curY)/2,
                        rx:(e.offsetX-curX)/2,
                        ry:(e.offsetY-curY)/2
                    });
                }else if(sharetype == 'circlefill'){
                    circlefill.setShape({
                        cx: e.offsetX -(e.offsetX-curX)/2,
                        cy: e.offsetY-(e.offsetY-curY)/2,
                        rx:(e.offsetX-curX)/2,
                        ry:(e.offsetY-curY)/2
                    });
                }else if(sharetype == 'vector'){
                    vector.setShape({
                        x1: curX,
                        y1: curY,
                        x2: e.offsetX,
                        y2: e.offsetY,
                        cpx1: e.offsetX,
                        cpy1: e.offsetY
                    });
                }
            }
            if(vectorstatus && !isMouseDown){
                vector.setShape({
                    cpx1: e.offsetX,
                    cpy1: e.offsetY
                });

            }

        });

        zr.on('mouseup',function(){
            isMouseDown = false;
            if(sharetype == 'line'){
                share = new Shape();
                share.name = 'line';
                share.x1 = group.children()[group.children().length -1].shape.x1;
                share.x2 = group.children()[group.children().length -1].shape.x2;
                share.y1 = group.children()[group.children().length -1].shape.y1;
                share.y2 = group.children()[group.children().length -1].shape.y2;
                sharearr.push(share);
            }else if(sharetype == 'square'){
                share = new Shape();
                share.name ='square';
                share.x = group.children()[group.children().length -1].shape.x;
                share.y = group.children()[group.children().length -1].shape.y;
                share.width = group.children()[group.children().length -1].shape.width;
                share.height = group.children()[group.children().length -1].shape.height;
                sharearr.push(share);
            }
            else if(sharetype == 'squarefill'){
                share = new Shape();
                share.name ='squarefill';
                share.x = group.children()[group.children().length -1].shape.x;
                share.y = group.children()[group.children().length -1].shape.y;
                share.width = group.children()[group.children().length -1].shape.width;
                share.height = group.children()[group.children().length -1].shape.height;
                sharearr.push(share);
            }
            else if(sharetype == 'circle'){
                share = new Shape();
                share.name ='circle';
                share.cx = group.children()[group.children().length -1].shape.cx;
                share.cy = group.children()[group.children().length -1].shape.cy;
                share.rx = group.children()[group.children().length -1].shape.rx;
                share.ry = group.children()[group.children().length -1].shape.ry;
                sharearr.push(share);
            }
            else if(sharetype == 'circlefill'){
                share = new Shape();
                share.name ='circlefill';
                share.cx = group.children()[group.children().length -1].shape.cx;
                share.cy = group.children()[group.children().length -1].shape.cy;
                share.rx = group.children()[group.children().length -1].shape.rx;
                share.ry = group.children()[group.children().length -1].shape.ry;
                sharearr.push(share);
            }

        });

        function addmove(){
            $.each(group.children(),function(i,item){
                item.draggable = true;
            });
        }

        function removemove(){
            $.each(group.children(),function(i,item){
                item.draggable = false;
            });
        }

        $('.shapebtn').click(function(){
            $('.shapebtn').removeClass("active");
            $(this).addClass('active');
            sharetype = $(this).attr('name');
            if(sharetype=='move'){
                addmove();
            }else{
                removemove();
            }
            if(sharetype == 'undo'){
                sharearr.pop();
                shaperedraw();
            }
        });

        function shaperedraw(){
            group.removeAll();
            $.each(sharearr,function(i,item){

                if(item.name == 'line'){
                    line = new zrender.Line({
                        shape:{
                            x1:item.x1,
                            y1:item.y1,
                            x2:item.x2,
                            y2:item.y2
                        },
                        style:{
                            fill:'none',
                            stroke:'#333'
                        }
                    });
                    group.add(line);
                }else if(item.name == 'square'){
                    square = new zrender.Rect({
                        shape:{
                            x:item.x,
                            y:item.y,
                            width:item.width,
                            height:item.height
                        },style:{
                            fill:'none',
                            stroke:'#333'
                        }
                    });
                    group.add(square);
                }            else if(item.name == 'squarefill'){
                    squarefill = new zrender.Rect({
                        shape:{
                            x:item.x,
                            y:item.y,
                            width:item.width,
                            height:item.height
                        },style:{
                            fill:'#333',
                            stroke:'#333'
                        }
                    });
                    group.add(squarefill);
                }
                else if(item.name == 'circle'){
                    circle = new zrender.Ellipse({
                        shape:{
                            cx:item.cx,
                            cy:item.cy,
                            rx:item.rx,
                            ry:item.ry
                        },style:{
                            fill:'none',
                            stroke:'#333'
                        }
                    });
                    group.add(circle);
                }
                else if(item.name == 'circlefill'){
                    circlefill = new zrender.Ellipse({
                        shape:{
                            cx:item.cx,
                            cy:item.cy,
                            rx:item.rx,
                            ry:item.ry
                        },style:{
                            fill:'#333',
                            stroke:'#333'
                        }
                    });
                    group.add(circlefill);
                }
                else if(item.name == 'vector'){
                    vector = new zrender.BezierCurve({
                        shape:{
                            x1:item.x1,
                            y1:item.y1,
                            x2:item.x2,
                            y2:item.y2,
                            cpx1:item.cpx1,
                            cpy1:item.cpy1
                        },style:{
                            fill:'none',
                            stroke:'#333'
                        }
                    });
                    group.add(vector);
                }
                else if(item.name == 'font'){
                    font = new zrender.Text({
                        style:{
                            text:item.text,
                            textFill:'#333',
                            textStroke:'#333'
                        }
                    });
                    font.attr('position', [item.x, item.y]);
                    group.add(font);
                }
            });
            zr.refresh();
        }


        $('#drawbtn').click(function(){

            $('#drawModal').modal('show');
            sharearr=[];
            return false;
        });

        function createcanvas(){
            var temarr = [];
            $.each(newworkshapearr,function(i,item){
                temarr.push(item.newworkdetailid)
            });
            var data =  $('#table').bootstrapTable('getOptions').data;
            var wrap = 0 ;
            $.each(data,function(i,item){
                wrap++;
                var temdiv = '<div width=1 class="text-center  temcan">';
                if($.inArray(item.id,temarr) > -1)  {
                    temdiv = '<div width=200 class="text-center col-md-3 temcan">';
                }
                var can = temdiv +
                        '<canvas id="mycan' + item.id + '" class=""></canvas><br><span>图' + item.id + '</span></div>';
                $('#canvasdiv').append(can);
                if (wrap%4 == 0){
                    $('#canvasdiv').append("<p>&nbsp;</p>");
                }

            });

        }

        function redrawrowcanvas(){
            //var zr = zrender.init(document.getElementById('mycanvas'));
            var data =  $('#table').bootstrapTable('getOptions').data;
            $.each(data,function(datai,dataitem){
                var zr = zrender.init(document.getElementById('mycan'+dataitem.id));
                $.each(newworkshapearr,function(shapei,shapeitem){
                    if(dataitem.id == shapeitem.newworkdetailid){

                        $('.temcan').each(function(){
                            if($(this).val() != dataitem.id){
                                //$(this).hide();
                            }else{
                                //$(this).show();
                            }
                        });

                        if(shapeitem.cwidth){
                            $('#mycan'+dataitem.id).attr('width',shapeitem.cwidth);
                        }
                        if(shapeitem.cheight){
                            $('#mycan'+dataitem.id).attr('height',shapeitem.cheight);
                        }
////////////////////////////////
                        if(shapeitem.name == 'line'){
                            line = new zrender.Line({
                                shape:{
                                    x1:shapeitem.x1,
                                    y1:shapeitem.y1,
                                    x2:shapeitem.x2,
                                    y2:shapeitem.y2
                                },
                                style:{
                                    fill:'none',
                                    stroke:'#333'
                                }
                            });
                            zr.add(line);
                        }else if(shapeitem.name == 'square'){
                            square = new zrender.Rect({
                                shape:{
                                    x:shapeitem.x,
                                    y:shapeitem.y,
                                    width:shapeitem.width,
                                    height:shapeitem.height
                                },style:{
                                    fill:'none',
                                    stroke:'#333'
                                }
                            });
                            zr.add(square);
                        }else if(shapeitem.name == 'squarefill'){
                            squarefill = new zrender.Rect({
                                shape:{
                                    x:shapeitem.x,
                                    y:shapeitem.y,
                                    width:shapeitem.width,
                                    height:shapeitem.height
                                },style:{
                                    fill:'#333',
                                    stroke:'#333'
                                }
                            });
                            zr.add(squarefill);
                        }
                        else if(shapeitem.name == 'circle'){
                            circle = new zrender.Ellipse({
                                shape:{
                                    cx:shapeitem.cx,
                                    cy:shapeitem.cy,
                                    rx:shapeitem.rx,
                                    ry:shapeitem.ry
                                },style:{
                                    fill:'none',
                                    stroke:'#333'
                                }
                            });
                            zr.add(circle);
                        }
                        else if(shapeitem.name == 'circlefill'){
                            circlefill = new zrender.Ellipse({
                                shape:{
                                    cx:shapeitem.cx,
                                    cy:shapeitem.cy,
                                    rx:shapeitem.rx,
                                    ry:shapeitem.ry
                                },style:{
                                    fill:'#333',
                                    stroke:'#333'
                                }
                            });
                            zr.add(circlefill);
                        }
                        else if(shapeitem.name == 'vector'){
                            vector = new zrender.BezierCurve({
                                shape:{
                                    x1:shapeitem.x1,
                                    y1:shapeitem.y1,
                                    x2:shapeitem.x2,
                                    y2:shapeitem.y2,
                                    cpx1:shapeitem.cpx1,
                                    cpy1:shapeitem.cpy1
                                },style:{
                                    fill:'none',
                                    stroke:'#333'
                                }
                            });
                            zr.add(vector);
                        }
                        else if(shapeitem.name == 'font'){
                            font = new zrender.Text({
                                style:{
                                    text:shapeitem.text,
                                    textFill:'#333',
                                    textStroke:'#333'
                                }
                            });
                            font.attr('position', [shapeitem.x, shapeitem.y]);
                            zr.add(font);
                        }

///////////////////////////////
                    }
                });
            });





        }

        $('.rowcanvas').click(function(){
            //alert($(this).attr('name'));
            sharearr = [];
            var thisname = $(this).attr('name');
            $.each(newworkshapearr,function(i,item){

                if(item.newworkdetailid == $(this).attr('name')){
                    shape = new Shape();
                    shape.name = item.name;
                    shape.x1 = item.x1;
                    shape.x2 = item.x2;
                    shape.y1 = item.y1;
                    shape.y2 = item.y2;
                    shape.cpx = item.cpx;
                    shape.cpy = item.cpy;
                    shape.width = item.width;
                    shape.height = item.height;
                    shape.x = item.x;
                    shape.y = item.y;
                    shape.cx = item.cx;
                    shape.cy = item.cy;
                    shape.rx = item.rx;
                    shape.ry = item.ry;
                    shape.cpx1 = item.cpx1;
                    shape.cpy1 = item.cpy1;
                    shape.text = item.text;
                    shape.cwidth = item.cwidth;
                    shape.cheight = item.cheight;
                    shape.newworkdetailid = item.newworkdetailid;
                    sharearr.push(shape);

                }

            });
            current_newworkdetailid = $(this).attr('name');
            $('#drawModal').modal('show');
        });




        function caltotal(){
            $.ajax({
                type : 'get',
                async : false,
                url :'../gettotal',
                data:{newworkid:$('#newworkid').val()},
                success : function(data) {
                    $('#worktable tbody').each(function(i,item){

                        item.remove();
                    });
                    var tbody =  $("<tbody></tbody>");
                    tbody.append('<tr><td><strong>加工</strong></td><td></td></tr>');
                    $.each(data.work,function(i,item){
                        if(parseFloat(item.toalnumber)>0) {
                            tbody.append('<tr><td><strong>' + item.name + '</strong></td><td>' + item.toalnumber + '片' + '</td></tr>');
                        }
                    });
                    $.each(data.work,function(i,item){
                        tbody.append('<tr><td><strong>'+item.name+'</strong></td><td>'+item.number.toFixed(2)+item.unit+'</td></tr>');
                    });
                    $('#worktable').append(tbody);

                    $('#usertable tbody').each(function(i,item){

                        item.remove();
                    });
                    var tbody =  $("<tbody></tbody>");
                    tbody.append('<tr><td><strong>用户</strong></td><td></td></tr>');
                    $.each(data.work,function(i,item){
                        if(parseFloat(item.toalnumber)>0) {
                            tbody.append('<tr><td><strong>' + item.name + '</strong></td><td>' + item.toalnumber + '片' + '</td></tr>');
                        }
                    });
                    $.each(data.user,function(i,item){
                        tbody.append('<tr><td><strong>'+item.name+'</strong></td><td>'+item.number.toFixed(2)+item.unit+'</td></tr>');
                    });
                    $('#usertable').append(tbody);

                }
            });
        }

        $('.createdshape').click(function(){
            current_newworkdetailid = $(this).val();
            $('#drawModal').modal('show');
            return false;
        });

        $('#saveshape').click(function(){
            var cwidth = 300;
            var cheight = 300;
            if($('#wvalue').val() != ''){
                cwidth = $('#wvalue').val();
            }
            if($('#hvalue').val() != ''){
                cheight = $('#hvalue').val();
            }
            $.ajax({
                async : false,
                url : "../saveshape",
                type : "GET",
                dataType : 'json',
                timeout : 5000,
                data:{
                    cwidth:cwidth,
                    cheight:cheight,
                    shape:sharearr,
                    newworkdetailid:current_newworkdetailid
                },
                success : function(){
                }
            });
            $('#drawModal').modal('hide');
            getdata();
        });

        function getdata(){

            caltotal();
            var tablejson;

            $.ajax({
                async : false,
                url : "../getdata",
                type : "GET",
                dataType : 'json',
                timeout : 5000,
                data:{
                    newworkid:$('#newworkid').val()

                },
                success : function(jsonstr) {// 客户端jquery预先定义好的callback函数,成功获取跨域服务器上的json数据后,会动态执行这个callback函数
                    newworkshapearr = [];
                    $.each(jsonstr.shape,function(i,item){
                        shape = new Shape();
                        shape.name = item.name;
                        shape.x1 = item.x1;
                        shape.x2 = item.x2;
                        shape.y1 = item.y1;
                        shape.y2 = item.y2;
                        shape.cpx = item.cpx;
                        shape.cpy = item.cpy;
                        shape.x = item.x;
                        shape.y = item.y;
                        shape.cx = item.cx;
                        shape.cy = item.cy;
                        shape.rx = item.rx;
                        shape.ry = item.ry;
                        shape.cpx1 = item.cpx1;
                        shape.cpy1 = item.cpy1;
                        shape.text = item.text;
                        shape.newworkdetailid = item.newworkdetailid;
                        shape.cwidth = item.cwidth;
                        shape.cheight = item.cheight;
                        shape.width = item.width;
                        shape.height = item.height;
                        newworkshapearr.push(shape);
                    });

                    //alert(jsonstr.price);
                    tablejson=jsonstr.newworkdetail;
                    $('#table').bootstrapTable({
                        showFooter:false,

                        columns: [{
                            checkbox: true,
                            footerFormatter: '合计'
                        },{
                            field: 'id',
                            title: 'id',
                            visible:false


                        },
                            {
                                field: 'groupcolor',
                                title: 'groupcolor',
                                visible:false


                            },
                            {
                                field: 'area',
                                title: '使用位置'

                            },
                            {
                                field: 'name',
                                title: '材料名称'

                            },
                            {
                                field: 'width',
                                title: '长'

                            },
                            {
                                field: 'height',
                                title: '宽'

                            },
                            {
                                field: 'userheight',
                                title: '用户宽'
                            },
                            {
                                field: 'number',
                                align: 'right',
                                title: '数量'
                            },
                            {
                                field: 'group',
                                title: '组'
                            },
                            {
                                field: 'imgUrl',
                                title: '',
                                align: 'center',
                                formatter: function(value,row,index){
                                    return '<button class="btn btn-outline btn-xs createdshape" value='+row.id+'>建图</button><canvas name='+row.id+' class="rowcanvas" id=can'+row.id +' width = 1 height = 1></canvas><span>图'+row.id+'</span>';
                                }
                            },
                            {
                                field: 'widthtype',
                                align:'center',
                                title: '长加工类型',
                                formatter: function(value,row,index){
                                    return '<img height=20px  src=../../line/l' + value + '.png>';
                                }
                            },
                            {
                                field: 'heighttype',
                                align:'center',
                                title: '宽加工类型',
                                formatter: function(value,row,index){
                                    return '<img height=20px  src=../../line/l' + value + '.png>';
                                }
                            },
                            {
                                field: 'operate',
                                title: '操作',
                                align: 'center',
                                events: operateEvents,
                                formatter: operateFormatter

                            }],

                        formatLoadingMessage: function(){
                            return "";
                        },
                        rowStyle: function (row, index) {
                            var style = {};

                            style={css:{'color':row["groupcolor"]}};
                            return style;
                        },
                        data: tablejson
                    });

                    $('#table').bootstrapTable('load',tablejson);
                    var sum=0;
                    $.each(jsonstr,function(i,item){
                        sum+=parseFloat(item.sum);
                    });
                    $('#sumspan').text(sum);
                    $('#payablespan').text(sum);
                    $('#payable').val(sum);



                },
                error : function(xhr) {
                }
            });
            createcanvas();
            redrawrowcanvas();
        }



        var datalist;
//        $.ajax({
//            type : 'get',
//            async : false,
//            url :'../getsupplier',
//            success : function(data) {
//                datalist=data;
//            }
//        });
        suggest(datalist);

        function suggest(data) {
            var testdataBsSuggest = $("#test_data").bsSuggest(
                    {
                        indexId: 0, indexKey: 2,
                        data: {
                            "value": data
                        }
                    }).on('onSetSelectValue', function(e, keyword, data) {
                        $('#supplierid').val(keyword.id);
                    });
        }

        var rawlist;
        $.ajax({
            type : 'get',
            async : false,
            url :'../getpreraw',
            success : function(data) {

                rawlist = data;
            }
        });
        raw(rawlist);

        function raw(data) {
            var rawdataBsSuggest = $("#raw_data").bsSuggest(
                    {
                        effectiveFieldsAlias:{id: "ID",pinyin: "简拼", name:"材料名称"},
                        showHeader: true,
                        indexId: 0, indexKey: 1,
                        data: {
                            "value": data
                        }
                    }).on('onSetSelectValue', function(e, keyword, data) {

                        $.ajax({
                            type : 'get',
                            async : false,
                            url :'../getrawbyid?id='+keyword.id,
                            success : function(json) {
                                //$('#modelid').val(keyword.id);
                                $('#newrawid').val(keyword.id);
                                //$('#modelwidth').val(json.width);
                                //$('#modelheight').val(json.height);
                                if($('#modelnumber').val()=='') {
                                    $('#modelnumber').val(1);
                                }
                            }
                        });
                    });
        }


        $('#modalsubmit').click(function(){

            $('.acheck').each(function(){
                if(true == $(this).is(':checked')) {
                    $('#modelwidthtype').val($(this).val());
                }
            });

            $('.bcheck').each(function(){
                if(true == $(this).is(':checked')) {
                    $('#modelheighttype').val($(this).val());
                }
            });
            $.ajax({
                type : 'get',
                async : false,
                url :'../changenewworkdetail',
                data:{
                    way:way,
                    newworkid:$('#newworkid').val(),
                    rawdata:$('#modelid').val(),
                    newrawid:$('#newrawid').val(),
                    width:$('#modelwidth').val(),
                    height:$('#modelheight').val(),
                    userheight:$('#modeluserheight').val(),
                    number:$('#modelnumber').val(),
                    widthtype:$('#modelwidthtype').val(),
                    heighttype:$('#modelheighttype').val(),
                    lossarea:$('#modellossarea').val(),
                    area:$('#modelarea').val(),
                    line:$('#lineid').val(),
                    wave:$('#waveid').val()
                },
                success : function(json) {
                    getdata();
                    $('#raw_data').val('');
                    $('#modelprice').val('');
                    $('#modelnumber').val('');
                    $('#modelwidth').val('');
                    $('#modelheight').val('');
                    $('#modeluserheight').val('');
                    $('#modellossarea').val('');
                    $('#modelarea').val('');
                    $('#a01').iCheck('check');
                    $('#b01').iCheck('check');

                }
            });

        });

        $('#modelprice').change(function(){
            $('#modelsum').val(parseFloat($('#modelprice').val()) * parseFloat($('#modelnumber').val()));
        });

        $('#modelnumber').change(function(){
            $('#modelsum').val(parseFloat($('#modelprice').val()) * parseFloat($('#modelnumber').val()));
        });

        $("#table").on("check.bs.table",function(e,row,ele){


            var rows = $('#table').bootstrapTable('getAllSelections');
            var ids = new Array();
            $.each(rows,function(i,item){
                ids.push(item.id);

            });
            if(ids.length > 1){
                $('#group').addClass('displayshow');
                $('#group').removeClass('displaynone');
            }else
            {
                $('#group').addClass('displaynone');
                $('#group').removeClass('displayshow');
            }
        });

        $('#group').click(function(){
            var rows = $('#table').bootstrapTable('getAllSelections');
            var ids = new Array();
            $.each(rows,function(i,item){
                ids.push(item.id);
            });
            $.ajax({
                type : 'get',
                async : false,
                url :'../group',
                data:{
                    ids:ids,
                    newworkid:$('#newworkid').val()
                },
                success : function(json) {
                    getdata();
                }
            });
            return false;
        });

        $('#edits').click(function(){
            way='edit';
            //alert($('#table').bootstrapTable('getSelections')[0].id);
            $('#modelid').val($('#table').bootstrapTable('getSelections')[0].id);
            $('#raw_data').val($('#table').bootstrapTable('getSelections')[0].name);
            $('#modelwidth').val($('#table').bootstrapTable('getSelections')[0].width);
            $('#modelheight').val($('#table').bootstrapTable('getSelections')[0].height);
            $('#modeluserheight').val($('#table').bootstrapTable('getSelections')[0].userheight);
            $('#modelnumber').val($('#table').bootstrapTable('getSelections')[0].number);
            $('#modellossarea').val($('#table').bootstrapTable('getSelections')[0].lossarea);
            $('#modelarea').val($('#table').bootstrapTable('getSelections')[0].area);
            var acheck = $('#table').bootstrapTable('getSelections')[0].widthtype;
            if(acheck == '02'){
                $('#a02').iCheck('check');
            }else             if(acheck == '03'){
                $('#a03').iCheck('check');
            }else            if(acheck == '04'){
                $('#a04').iCheck('check');
            }else            if(acheck == '05'){
                $('#a05').iCheck('check');
            }else            if(acheck == '06'){
                $('#a06').iCheck('check');
            }else{
                $('#a01').iCheck('check');
            }

            var bcheck = $('#table').bootstrapTable('getSelections')[0].heighttype;
            if(bcheck == '02'){
                $('#b02').iCheck('check');
            }else             if(bcheck == '03'){
                $('#b03').iCheck('check');
            }else            if(bcheck == '04'){
                $('#b04').iCheck('check');
            }else            if(bcheck == '05'){
                $('#b05').iCheck('check');
            }else            if(bcheck == '06'){
                $('#b06').iCheck('check');
            }else{
                $('#b01').iCheck('check');
            }


            $("#addModal").modal();

        });


        $('#deletes').click(function(){
            way='delete';
            var rows = $('#table').bootstrapTable('getAllSelections');
            var ids = new Array();
            $.each(rows,function(i,item){
                ids.push(item.id);

            });


            $.ajax({
                type : 'get',
                async : false,
                url :'../deleteinrawdetail',
                data:{
                    ids:ids
                },
                success : function(json) {
                    getdata();
                }
            });
        });

        $('#adds').click(function(){
            way='add';

        });

        $('#smt').click(function(){

        });

        //年月选择器
        laydate.render({
            elem: '#installdate',
            done: function(value, date){
                $('#installdatevalue').val(value);

            }
        });

        $('#work').click(function(){
            $.ajax({
                type : 'get',
                async : false,
                url :'../work',
                data:{preorderid:$('#preorderid').val()},
                success : function(json) {
                    window.location.replace("../../inworkdepots/"+json+"/edit");

                }
            });
            //$('#demo').wSelect();
            //$('#demo').selectBoxIt({ defaultText: 'Testing', autoWidth: false });


        });

        if($('#customerid').val()!=''){
            $('#customer').val($('#customerid').val());
            $.ajax({
                type : 'get',
                async : false,
                url :'../getcumtomerbyid',
                data:{
                    id:$('#customerid').val()
                },
                success : function(json) {

                    $('#customerspan').html('电话：'+json.tel +'&nbsp;&nbsp;&nbsp;&nbsp; 地址：'+json.region);
                }
            });
        }

        $('#designer').change(function(){
            $('#designerid').val(this.value);
        });

        if($('#designerid').val()!=''){
            $('#designer').val($('#designerid').val());
        }

        $('#fiter').change(function(){
            $('#fiterid').val(this.value);
        });

        if($('#fiterid').val()!=''){
            $('#fiter').val($('#fiterid').val());
        }

        $('#cooper').change(function(){
            $('#cooperid').val(this.value);
            $.ajax({
                type : 'get',
                async : false,
                url :'../getcooperuser',
                data:{
                    id: this.value
                },
                success : function(json) {

                    if(json.length){
                        $('#cooperuserdiv').removeClass('displaynone');
                        $('#cooperuserdiv').addClass('displayshow');
                        $('#cooperuser').empty();
                        $("#cooperuser").append("<option value='0'>请选择装修公司</option>");
                        $.each(json,function(i,item){
                            $("#cooperuser").append("<option value="+item.id+">"+item.name+"</option>");
                        });

                    }else{
                        $('#cooperuserdiv').removeClass('displayshow');
                        $('#cooperuserdiv').addClass('displaynone');
                    }

                },
                error:function(json){
                    $('#cooperuserdiv').removeClass('displayshow');
                    $('#cooperuserdiv').addClass('displaynone');
                }
            });


        });

        if($('#cooperid').val() != 0){
            $('#cooper').val($('#cooperid').val());
            $.ajax({
                type : 'get',
                async : false,
                url :'../getcooperuser',
                data:{
                    id: $('#cooperid').val()
                },
                success : function(json) {

                    if(json.length){
                        $('#cooperuserdiv').removeClass('displaynone');
                        $('#cooperuserdiv').addClass('displayshow');
                        $('#cooperuser').empty();
                        $("#cooperuser").append("<option value='0'>请选择客户联系人</option>");
                        $.each(json,function(i,item){
                            $("#cooperuser").append("<option value="+item.id+">"+item.name+"</option>");
                        });

                        $('#cooperuser').val($('#cooperuserid').val());

                    }else{
                        $('#cooperuserdiv').removeClass('displayshow');
                        $('#cooperuserdiv').addClass('displaynone');
                    }

                },
                error:function(json){
                    $('#cooperuserdiv').removeClass('displayshow');
                    $('#cooperuserdiv').addClass('displaynone');
                }
            });
        }

        $('#customer').change(function(){
            $('#customerid').val(this.value);
            if(this.value==0){
                $('#customerspan').html('');
            }
            $.ajax({
                type : 'get',
                async : false,
                url :'../getcumtomerbyid',
                data:{
                    id:this.value
                },
                success : function(json) {

                    $('#customerspan').html('电话：'+json.tel +'&nbsp;&nbsp;&nbsp;&nbsp; 地址：'+json.region);
                }
            });
        });

        $('#line').change(function(){
            $('#lineid').val(this.value);
        });

        if($('#lineid').val() != 0){
            $('#line').val($('#lineid').val());
        }

        $('#wave').change(function(){
            $('#waveid').val(this.value);
        });

        if($('#waveid').val() != 0){
            $('#wave').val($('#waveid').val());
        }



    });

    window.operateEvents = {

        'click .edit': function (e, value, row, index) {


            way='edit';
            //alert($('#table').bootstrapTable('getSelections')[0].id);
            $('#modelid').val(row.id);
            $('#raw_data').val(row.name);
            $('#newrawid').val(row.raw_id);
            $('#modelwidth').val(row.width);
            $('#modelheight').val(row.height);
            $('#modeluserheight').val(row.userheight);
            $('#modelnumber').val(row.number);
            $('#modellossarea').val(row.lossarea);
            $('#modelarea').val(row.area);
            var acheck = row.widthtype;
            if(acheck == '02'){
                $('#a02').iCheck('check');
            }else             if(acheck == '03'){
                $('#a03').iCheck('check');
            }else            if(acheck == '04'){
                $('#a04').iCheck('check');
            }else            if(acheck == '05'){
                $('#a05').iCheck('check');
            }else            if(acheck == '06'){
                $('#a06').iCheck('check');
            }else{
                $('#a01').iCheck('check');
            }

            var bcheck = row.heighttype;
            if(bcheck == '02'){
                $('#b02').iCheck('check');
            }else             if(bcheck == '03'){
                $('#b03').iCheck('check');
            }else            if(bcheck == '04'){
                $('#b04').iCheck('check');
            }else            if(bcheck == '05'){
                $('#b05').iCheck('check');
            }else            if(bcheck == '06'){
                $('#b06').iCheck('check');
            }else{
                $('#b01').iCheck('check');
            }
            $("#addModal").modal();
        },
        'click .remove': function (e, value, row, index) {
            var ids = new Array();
            ids.push(row.id);
            $.ajax({
                type : 'get',
                async : false,
                url :'../deleteinrawdetail',
                data:{
                    ids:ids
                },
                success : function(json) {
                    getdata();
                }
            });

        }
    };

    function operateFormatter(value, row, index) {
        return [
            '<a class="edit" href="javascript:void(0)" title="编辑">',
            '<i class="fa fa-pencil"></i>',
            '</a>  ',
            '<a class="remove" href="javascript:void(0)" title="删除">',
            '<i class="fa fa-trash"></i>',
            '</a>'
        ].join('');
    }

    function getdata(){
        var tablejson;

        $.ajax({
            async : false,
            url : "../getdata",
            type : "GET",
            dataType : 'json',
            timeout : 5000,
            data:{
                newworkid:$('#newworkid').val()

            },
            success : function(jsonstr) {// 客户端jquery预先定义好的callback函数,成功获取跨域服务器上的json数据后,会动态执行这个callback函数
                //alert(jsonstr.price);
                tablejson=jsonstr;
                $('#table').bootstrapTable({
                    showFooter:false,

                    columns: [{
                        checkbox: true,
                        footerFormatter: '合计'
                    },{
                        field: 'id',
                        title: 'id',
                        visible:false


                    },{
                        field: 'name',
                        title: '材料名称'

                    },
                        {
                            field: 'width',
                            title: '长'

                        },
                        {
                            field: 'height',
                            title: '宽'

                        },
                        {
                            field: 'userheight',
                            title: '用户宽'


                        },
                        {
                            field: 'number',
                            align: 'right',
                            title: '数量'


                        },
                        {
                            field: 'widthtype',
                            title: '长加工类型',
                            formatter: function(value,row,index){
                                return '<img height=20px  src=../../line/l' + value + '.png>';
                            }

                        },
                        {
                            field: 'heighttype',
                            title: '宽加工类型',
                            formatter: function(value,row,index){
                                return '<img height=20px  src=../../line/l' + value + '.png>';
                            }
                        },
                        {
                            field: 'operate',
                            title: '操作',
                            align: 'center',
                            events: operateEvents,
                            formatter: operateFormatter

                        }],

                    formatLoadingMessage: function(){
                        return "";
                    },
                    data: tablejson
                });

                $('#table').bootstrapTable('load',tablejson);
                var sum=0;
                $.each(jsonstr,function(i,item){
                    sum+=parseFloat(item.sum);
                });
                $('#sumspan').text(sum);
                $('#payablespan').text(sum);
                $('#payable').val(sum);

            },
            error : function(xhr) {
            }
        });
    }




</script>
<style>
    .displaynone{
        display:none;
    }
    .displayshow{
        display:block;
    }
</style>
<div class="col-md-12 ibox ibox-content">
  <%= form_for(@newwork,:html => {:class=>'form-horizontal m-t',:multipart => true,:id=>'userform'}) do |f| %>
      <div class="ibox-content form-horizontal m-t">


        <div class="row">
          <div class="col-sm-6">
            <h4>单据编号：<span class="text-navy"><%=@newwork.ordernumber %></span></h4>
            <input type="hidden" id="newworkid" value=<%= @newwork.id %> >
            <input type="hidden" id="newworkdetailid">
          </div>
          <div>
            <!--这里是供应商-->
          </div>
        </div>

        <div class="row">
          <table class="col-md-12">
            <tr>
              <td class="col-md-4">

                <div class="form-group">
                  <label class="col-sm-4 control-label">装修公司</label>
                  <div class="col-sm-8">
                    <select class="form-control m-b" id="cooper">
                      <option value="0">请选择装修公司</option>
                      <% @coopers.each do |f| %>
                          <option value=<%=f.id %>><%=f.name %></option>
                      <% end %>
                    </select>
                    <%= f.hidden_field :cooper_id,class: "form-control",id:'cooperid' %>
                  </div>
                </div>
              </td>
              <td class="col-md-4">
                <div class="form-group">
                  <label class="col-sm-4 control-label">设计师</label>
                  <div class="col-sm-8">
                    <select class="form-control m-b" id="designer">
                      <option value="0">请选择设计师</option>
                      <% @designers.each do |f| %>
                          <option value=<%=f.id %>><%=f.name %></option>
                      <% end %>
                    </select>
                    <%= f.hidden_field :designer_id,class: "form-control",id:'designerid' %>
                  </div>
                </div>
              </td>
              <td class="col-md-4">
                <div class="form-group">
                  <label class="col-sm-4 control-label">项目经理</label>
                  <div class="col-sm-8">
                    <select class="form-control m-b" id="fiter">
                      <option value="0">请选择项目经理</option>
                      <% @fiters.each do |f| %>
                          <option value=<%=f.id %>><%=f.name %></option>
                      <% end %>
                    </select>
                    <%= f.hidden_field :fiter_id,class: "form-control",id:'fiterid' %>
                  </div>
                </div>
              </td>
            </tr>
          </table>




        </div>

        <div class="row">
          <table class="col-md-12">
            <tr>
              <td class="col-md-4">

                <div class="form-group">
                  <label class="col-sm-4 control-label">客户</label>
                  <div class="col-sm-8">
                    <select class="form-control m-b" id="customer">
                      <option value="0">请选择客户</option>
                      <% @customers.each do |f| %>
                          <option value=<%=f.id %>><%=f.name %></option>
                      <% end %>
                    </select>
                    <%= f.hidden_field :customer_id,class: "form-control",id:'customerid' %>
                  </div>
                </div>
              </td>
              <td class="col-md-8">
                <div class="form-group" style="margin-top: -10px;">
                  <label class="control-label"></label>
                  <div class="col-sm-11">
                    <span  id="customerspan"></span>
                  </div>
                </div>



              </td>
            </tr>
          </table>
        </div>



        <div class="hr-line-dashed"></div>
        <div class="row">

          <div class="col-md-12">
            <table width="100%">
              <tr>
                <td>

                  <div class="form-group">
                    <div class="col-sm-4 control-label"><img src="../../line/l02.png" width="20px"></div>
                    <div class="col-sm-8">
                      <select class="form-control m-b" id="line">
                        <option value="0">加工方式</option>
                        <% @preraws.each do |f| %>
                            <option value=<%=f.id %>><%=f.name %></option>
                        <% end %>
                      </select>
                      <%= f.hidden_field :line,class: "form-control",id:'lineid' %>
                    </div>
                  </div>
                </td>
                <td width="10%"></td>
                <td>

                  <div class="form-group">
                    <div class="col-sm-4 control-label"><img src="../../line/l04.png" width="20px"></div>
                    <div class="col-sm-8">
                      <select class="form-control m-b" id="wave">
                        <option value="0">加工方式</option>
                        <% @preraws.each do |f| %>
                            <option value=<%=f.id %>><%=f.name %></option>
                        <% end %>
                      </select>
                      <%= f.hidden_field :wave,class: "form-control",id:'waveid' %>
                    </div>
                  </div>
                </td>
              </tr>
            </table>
          </div>
        </div>
        <div class="example-wrap">

          <div class="example">
            <div class="btn-group hidden-xs" id="exampleToolbar" role="group">
              <button type="button" class="btn btn-outline btn-default" data-toggle="modal" data-target="#addModal" id="adds">
                <i class="fa fa-plus" aria-hidden="true"></i>
              </button>
              <button type="button" class="btn btn-outline btn-default" id="edits">
                <i class="fa fa-edit" aria-hidden="true"></i>
              </button>
              <button type="button" class="btn btn-outline btn-default" id="deletes">
                <i class="fa fa-trash" aria-hidden="true"></i>
              </button>

              <button id="group" class="btn btn-w-m btn-outline btn-default">成组</button>
            </div>


            <table id="table">

            </table>





          </div>

          <div id="canvasdiv" class="col-md-12">

          </div>



          <div class="col-md-6">
            <table class="table" id="usertable">

              <tr>
                <td>
                  <strong>用户</strong>
                </td>
                <td></td>
              </tr>
              <tr>
                <td><strong>总价：</strong>
                </td>
                <td>&yen;1026.00</td>
              </tr>
              <tr>
                <td><strong>税：</strong>
                </td>
                <td>&yen;235.98</td>
              </tr>
              <tr>
                <td><strong>总计</strong>
                </td>
                <td>&yen;1261.98</td>
              </tr>

            </table>
          </div>
          <div class="col-md-6">
            <table class="table" id="worktable">

              <tr>
                <td>
                  <strong>加工</strong>
                </td>
                <td></td>
              </tr>
              <tr>
                <td><strong>总价：</strong>
                </td>
                <td>&yen;1026.00</td>
              </tr>
              <tr>
                <td><strong>税：</strong>
                </td>
                <td>&yen;235.98</td>
              </tr>
              <tr>
                <td><strong>总计</strong>
                </td>
                <td>&yen;1261.98</td>
              </tr>

            </table>
          </div>

        </div>


      </div>

      <table border="0" class="col-md-12">
        <tr>
          <td class="text-left">

            <div class="form-group">
              <label class="col-sm-2 control-label">经手人：</label>

              <div class="col-sm-4">
                <%= f.hidden_field :user,class: "form-control",id:'user' %>
                <select class="form-control m-b" id="userselect">
                  <option value="0">请选择经手人</option>
                  <% @users.each do |f| %>
                      <option value=<%=f.id %>><%=f.name %></option>
                  <% end %>
                </select>
              </div>
            </div>

          </td>
          <td>
          </td>
          <td class="text-right">

            <%= link_to '客户联',newwork_path(@newwork),class:'btn btn-w-m btn-primary' %>&nbsp;
            <%= link_to '加工联',worklian_newwork_path(@newwork),class:'btn btn-w-m btn-primary' %>&nbsp;
            <%= f.submit '确定',class: "btn btn-w-m btn-primary ",id:'smt' %>

          </td>
        </tr>
      </table>

  <% end %>
</div>

<!-- 模态框（Modal） -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h4 class="modal-title" id="myModalLabel">原材料明细</h4>
      </div>
      <div class="modal-body" >
        <div class="form-horizontal m-t">
          <div class="form-group">
            <label class="col-sm-3 control-label">材料：</label>
            <div class="col-sm-9">
              <div class="input-group">
                <input type="text" class="form-control" id="raw_data">
                <div class="input-group-btn">
                  <button type="button" class="btn btn-white dropdown-toggle" data-toggle="dropdown">
                    <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu dropdown-menu-right" role="menu">
                  </ul>
                </div>
                <!-- /btn-group -->
              </div>
            </div>
          </div>
          <input type="hidden" id="modelid">
          <input type="hidden" id="newrawid">

          <div class="form-group">
            <label class="col-sm-3 control-label">使用位置：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modelarea">
            </div>
          </div>


          <div class="form-group">
            <label class="col-sm-3 control-label">长：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modelwidth">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-3 control-label">宽：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modelheight">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-3 control-label">用户宽：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modeluserheight">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-3 control-label">损耗面积：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modellossarea">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-3 control-label">数量：</label>
            <div class="col-sm-9">
              <input class="form-control" id="modelnumber">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-2 control-label">长加工：</label>
            <div class="col-sm-10">
              <table>
                <tr>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" id="a01" class="acheck" checked=""  value="01" name="a"> <i></i><img src="../../../line/l01.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="acheck" id="a02" value="02" name="a"> <i></i><img src="../../../line/l02.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="acheck" id="a03" value="03" name="a"> <i></i><img src="../../../line/l03.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="acheck"  id="a04" value="04" name="a"> <i></i><img src="../../../line/l04.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="acheck" id="a05" value="05" name="a"> <i></i><img src="../../../line/l05.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="acheck" id="a06" value="06" name="a"> <i></i><img src="../../../line/l06.png" width="20px"></label>
                    </div>
                  </td>
                </tr>
              </table>
              <input type="hidden" class="form-control" id="modelwidthtype">
            </div>
          </div>

          <div class="form-group">
            <label class="col-sm-2 control-label">宽加工：</label>
            <div class="col-sm-10">
              <table>
                <tr>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b01" checked="true" value="01" name="b"> <i></i><img src="../../../line/l01.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b02" value="02" name="b"> <i></i><img src="../../../line/l02.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b03" value="03" name="b"> <i></i><img src="../../../line/l03.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b04" value="04" name="b"> <i></i><img src="../../../line/l04.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b05"  value="05" name="b"> <i></i><img src="../../../line/l05.png" width="20px"></label>
                    </div>
                  </td>
                  <td>
                    <div class="radio i-checks">
                      <label>
                        <input type="radio" class="bcheck" id="b06" value="06" name="b"> <i></i><img src="../../../line/l06.png" width="20px"></label>
                    </div>
                  </td>
                </tr>
              </table>
              <input type="hidden" class="form-control" id="modelheighttype">
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">

        <button type="button" class="btn btn-primary" data-dismiss="modal" id="modalsubmit">确定</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div class="modal fade" id="drawModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel">建图</h4>
      </div>
      <div class="modal-body">
        <div class="btn-group col-md-12" style="display: block;">
          <button type="button" name="undo" class="btn btn-white active shapebtn"><i class="fa fa-undo"></i>
          </button>
          <button type="button" name="move" class="btn btn-white shapebtn"><i class="fa fa-arrows"></i>
          </button>
          <button type="button" name="font" class="btn btn-white shapebtn"><i class="fa fa-font"></i>
          </button>
          <button type="button" name="line" class="btn btn-white shapebtn"><img src="../../icon/line.png" width="15px"></img>
          </button>
          <button type="button" name="square" class="btn btn-white shapebtn"><img src="../../icon/square.png" width="15px"></img>
          </button>
          <button type="button" name="squarefill" class="btn btn-white shapebtn"><img src="../../icon/square2.png" width="15px"></img>
          </button>
          <button type="button" name="circle" class="btn btn-white shapebtn"><img src="../../icon/circle.png" width="15px"></img>
          </button>
          <button type="button" name="circlefill" class="btn btn-white shapebtn"><img src="../../icon/circle2.png" width="15px"></img>
          </button>
          <button type="button" name="vector" class="btn btn-white shapebtn"><img src="../../icon/vector.png" width="15px"></img>
          </button>

          <button id="coortext" type="button" class="btn btn-white" style="width: 80px;margin-left: 10px;">&nbsp;</button>
        </div>
        <div>
          &nbsp;宽<input id="wvalue" style="width: 60px;">高<input id="hvalue" style="width: 60px;"><button type="button" class="btn btn-xs" id="whbtn">确定</button>
        </div>
        <p>&nbsp;</p>
        <div class="text-center"  width="300" height="300">
          <canvas id="mycanvas"  width="300" height="300">
          </canvas>
          <input id="canvastext" value="" style="position: absolute;margin-left: -300px;display:none;">
        </div>
      </div>
      <div class="modal-footer">

        <button type="button" id="saveshape" class="btn btn-primary">保存</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal -->
</div>
